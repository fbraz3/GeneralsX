diff --git a/Core/Libraries/Source/WWVegas/WWDownload/Download.cpp b/Core/Libraries/Source/WWVegas/WWDownload/Download.cpp
index 803bbdc8..4d7812c3 100644
--- a/Core/Libraries/Source/WWVegas/WWDownload/Download.cpp
+++ b/Core/Libraries/Source/WWVegas/WWDownload/Download.cpp
@@ -19,13 +19,24 @@
 // Download.cpp : Implementation of CDownload
 #include "DownloadDebug.h"
 #include "Download.h"
-#include "stringex.h"
-#include <mmsystem.h>
+#include "mmsystem.h"
 #include <assert.h>
-#include <direct.h>
+#include "direct.h"
 #include <stdlib.h>
 #include <stdio.h>
 #include <sys/stat.h>
+#include <string.h>
+#include <cstring>
+
+// Additional compatibility definitions for macOS
+#ifdef __APPLE__
+#define _strnicmp strncasecmp
+#define _stat stat
+inline int MulDiv(int nNumber, int nNumerator, int nDenominator) {
+    if (nDenominator == 0) return 0;
+    return (int)(((long long)nNumber * nNumerator) / nDenominator);
+}
+#endif
 
 /////////////////////////////////////////////////////////////////////////////
 // CDownload
@@ -70,15 +81,15 @@ HRESULT CDownload::DownloadFile(LPCSTR server, LPCSTR username, LPCSTR password,
 	_mkdir("download");
 
 	// Copy parameters to member variables.
-	strlcpy( m_Server, server, sizeof( m_Server ) );
-	strlcpy( m_Login, username, sizeof( m_Login ) );
-	strlcpy( m_Password, password, sizeof( m_Password ) );
-	strlcpy( m_File, file, sizeof( m_File ) );
-	strlcpy( m_LocalFile, localfile, sizeof( m_LocalFile ) );
+	strncpy( m_Server, server, sizeof( m_Server ) );
+	strncpy( m_Login, username, sizeof( m_Login ) );
+	strncpy( m_Password, password, sizeof( m_Password ) );
+	strncpy( m_File, file, sizeof( m_File ) );
+	strncpy( m_LocalFile, localfile, sizeof( m_LocalFile ) );
 
-	strlcpy( m_LastLocalFile, localfile, sizeof( m_LastLocalFile ) );
+	strncpy( m_LastLocalFile, localfile, sizeof( m_LastLocalFile ) );
 
-	strlcpy( m_RegKey, regkey, sizeof( m_RegKey ) );
+	strncpy( m_RegKey, regkey, sizeof( m_RegKey ) );
 	m_TryResume = tryresume;
 	m_StartPosition=0;
 
@@ -114,7 +125,8 @@ HRESULT CDownload::GetLastLocalFile(char *local_file, int maxlen) {
 	if (local_file==0)
 		return(E_FAIL);
 
-	strlcpy(local_file, m_LastLocalFile, maxlen);
+	strncpy(local_file, m_LastLocalFile, maxlen);
+	local_file[maxlen-1]=0;
 
 	return(S_OK);
 }
