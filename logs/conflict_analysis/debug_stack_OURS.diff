diff --git a/Core/Libraries/Source/debug/debug_stack.cpp b/Core/Libraries/Source/debug/debug_stack.cpp
index 438be1bf..0246c3dc 100644
--- a/Core/Libraries/Source/debug/debug_stack.cpp
+++ b/Core/Libraries/Source/debug/debug_stack.cpp
@@ -27,7 +27,9 @@
 // Stack walker
 //////////////////////////////////////////////////////////////////////////////
 #include "_pch.h"
-#include "stringex.h"
+#include <cstdint>
+
+#ifdef _WIN32
 #include <imagehlp.h>
 
 // Definitions to allow run-time linking to the dbghelp.dll functions.
@@ -90,7 +92,7 @@ static void InitDbghelp(void)
   unsigned k=0;
   for (;DebughelpFunctionNames[k];++k,++funcptr)
   {
-    *funcptr=(unsigned)GetProcAddress(g_dbghelp,DebughelpFunctionNames[k]);
+    *funcptr=(unsigned)(uintptr_t)GetProcAddress(g_dbghelp,DebughelpFunctionNames[k]);
     if (!*funcptr)
       break;
   }
@@ -251,7 +253,8 @@ void DebugStackwalk::Signature::GetSymbol(unsigned addr,
 
     char *p=strrchr(symbolBuffer,'\\'); // use filename only, strip off path
     p=p?p+1:symbolBuffer;
-    strlcpy(bufMod,p,sizeMod);
+    strncpy(bufMod,p,sizeMod);
+    bufMod[sizeMod-1]=0;
   }
   if (relMod)
     *relMod=addr-modBase;
@@ -266,7 +269,8 @@ void DebugStackwalk::Signature::GetSymbol(unsigned addr,
     DWORD displacement;
     if (gDbg._SymGetSymFromAddr((HANDLE)GetCurrentProcessId(),addr,&displacement,symPtr))
     {
-      strlcpy(bufSym,symPtr->Name,sizeSym);
+      strncpy(bufSym,symPtr->Name,sizeSym);
+      bufSym[sizeSym-1]=0;
       if (relSym)
         *relSym=displacement;
     }
@@ -287,7 +291,8 @@ void DebugStackwalk::Signature::GetSymbol(unsigned addr,
     {
       char *p=strrchr(line.FileName,'\\'); // use filename only, strip off path
       p=p?p+1:line.FileName;
-      strlcpy(bufFile,p,sizeFile);
+      strncpy(bufFile,p,sizeFile);
+      bufFile[sizeFile-1]=0;
       if (linePtr)
         *linePtr=line.LineNumber;
       if (relLine)
@@ -388,3 +393,6 @@ int DebugStackwalk::StackWalk(Signature &sig, struct _CONTEXT *ctx)
 
 	return sig.m_numAddr;
 }
+#else
+// macOS: Stack walking functionality not supported - use empty stubs or minimal implementations as needed by other parts of the system
+#endif
